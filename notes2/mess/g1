"""
The same principle applies to the steps of processing our notes. Consider that no single step in the process of turning raw ideas into finished pieces of writing is particularly difficult. It isn’t very hard to write down notes in the first place. Nor is turning a group of notes into an outline very demanding. It also isn’t much of a challenge to turn a working outline full of relevant arguments into a rough draft. And polishing a well-conceived rough draft into a final draft is trivial.

So if each individual step is so easy, why do we find the overall experience of writing so grueling? Because we try to do all the steps at once. Each of the activities that make up “writing” – reading, reflecting, having ideas, making connections, distinguishing terms, finding the right words, structuring, organizing, editing, correcting, and rewriting – require a very different kind of attention.

Proofreading requires very focused, detail-oriented attention, while choosing which words to put down in the first place might require a more open, free-floating attention. When looking for interesting connections between notes, we often need to be in a playful, curious state of mind, whereas when putting them in logical order, our state of mind probably needs to be more serious and precise.

The slip-box is the host of the process outlined above. It provides a place where distinct batches of work can be created, worked on, and saved permanently until the next time we are ready to deploy that particular kind of attention. It deliberately puts distance between ourselves and what we’ve written, which is essential for evaluating it objectively. It is far easier to switch between the role of creator and critic when there is a clear separation between them, and you don’t have to do both at the same time.
"""
- https://praxis.fortelabs.co/how-to-take-smart-notes/
	- https://praxis.fortelabs.co/how-to-take-smart-notes/
	- https://news.ycombinator.com/item?id=22341518










iot
    https://github.com/electrocoder/iotdashboard
        https://iothook.com/
        https://iothook.com/en/device/chart/301/

        finally something that accepts multiple sensor data on one http request. Unfortunately no true dashboard or customizable graphs.

    https://www.instructables.com/id/IoT-Guru-Cloud-Simple-Chart-Example/






language learning
    https://www.reddit.com/r/germany/comments/en8dg6/i_made_a_free_website_where_you_can_learn_german/




electronics
    transistors
        https://arduinodiy.wordpress.com/2012/05/02/using-mosfets-with-ttl-levels/




visualization
    https://infogram.com/
    https://www.highcharts.com/
        https://github.com/kyper-data/python-highcharts
    https://gojs.net



collaborative tools
    http://tapor.ca/tool_lists/15
    https://mural.co/templates
    http://searchteam.com
        cant log in



mindmapping
    freeplane
    https://en.wikipedia.org/wiki/Compendium_(software)
        https://github.com/CompendiumNG/CompendiumNG/wiki/Download%2C-build-and-run-CompendiumNG-from-GitHub




meta
    http://tapor.ca/
    https://www.cubicweb.org/1347429
        https://www.cubicweb.org/blog/1238
        https://www.cubicweb.org/Link
        https://cubicweb.readthedocs.io/en/latest/book/devrepo/cubes/available-cubes/
    https://hypothes.is/search
    https://www.cubicweb.org/link/2909358





todo
    https://www.honeycomb.io/microservices/
    https://stackoverflow.com/questions/18760281/how-to-increase-scrollback-buffer-size-in-tmux
    https://graphik-team.github.io/graal/
        The existential rule framework
    https://basecamp.com/shapeup/3.4-chapter-12#status-without-asking


    http://irnok.net:3030/help/source/doc/home/prolog/ontology-server/ClioPatria/lib/semweb/rdf_json.pl
    https://github.com/logicmoo/ClioPatria-filessytem-and-clausedb/blob/master/README.md
    https://www.swi-prolog.org/pldoc/man?section=termtojson
    https://pengines.swi-prolog.org/apps/scratchpad/index.html#

    http://www.pathwayslms.com/swipltuts/clpfd/clpfd.html
    http://www.pathwayslms.com/swipltuts/message/index.html

    CHR
        http://www.pathwayslms.com/swipltuts/chr/basics.html
        http://www.pathwayslms.com/swipltuts/chr/examples.html
        https://dtai.cs.kuleuven.be/CHR/files/tutorial_iclp2008.pdf
            Alternate Ending?
            Unspecified which partner is found?
            coin ==> heads. coin ==> tails.
                ^ im getting different order


        https://www.swi-prolog.org/pldoc/man?section=debugging
        https://developer.logicblox.com/using-modeler-js-applications/
        https://boxbase.org/entries/2018/aug/13/constraint_handling_rules/


    https://www.swi-prolog.org/pldoc/doc/_SWI_/library/rewrite.pl?format_comments=false&show=src
    https://www.swi-prolog.org/pldoc/man?section=solutionsequences

    https://www.doc.ic.ac.uk/~mpsha/ECExplained.pdf
        event calculus

    https://swish.swi-prolog.org/pldoc/doc/_CWD_/lib/render/graphviz.pl
    https://swish.swi-prolog.org/example/render_graphviz.swinb




webdev

    utils

		https://www.endpoints.dev/

        rollup
            https://github.com/rollup/rollup/
            should be easier to configure than webpack
            does not seem mature yet - weird bugs around watching files, only one instance can run at a time


    frameworks

        https://svelte.dev/
            a framework that seems to be like a next level from vue

        https://github.com/mavoweb/mavo
            low-code js UI, js library of html tags, no rdf
            backends:
                https://plugins.mavo.io/
            https://plugins.mavo.io/plugin/chart

        https://github.com/tiangolo/fastapi
	        https://www.reddit.com/r/Python/comments/s0jgou/starlite_the_little_api_framework_that_can/
        https://github.com/sveltejs/svelte
            https://github.com/mdauner/sveltejs-forms
            https://github.com/noahlh/celestite
            https://news.ycombinator.com/item?id=22534639
        https://developer.logicblox.com/using-modeler-js-applications/
        https://www.cubicweb.org/blogentry/17069884
            Hypermedia API with cubicweb-jsonschema


        http://nytimes.github.io/pourover/
            library for filtering and sorting of large collections in the browser
        https://www.cubicweb.org/link/2909347
            stream based protocol for exposing and consuming data in a standardised way. It uses Atom and RDF
        https://gojs.net
            Interactive JavaScript Diagrams for the Web
        https://dwkit.com/documentation/video-tutorials
        https://www.html5rocks.com/en/tutorials/cors/


    low-code platforms

        https://www.openxava.org/
            "write the code for your data structure and business logic. You do not write HTML, JavaScript, CSS, SQL, etc. The user interface and the database logic are automatically provided."
            Java

        https://www.netlify.com
            https://docs.netlify.com/visitor-access/identity/#enable-identity-in-the-ui
            low code but full js/html

        https://structr.com/
            curious neo4j-based visual browser app building framework, with a dataflow language

        knack.com
            recommended, for simple mockups
            $39/month

        https://bubble.io/
            recommended, for simple mockups

        https://mobileroadie.com/
            pre-templated company/business/media/event app creator

        https://en.wikipedia.org/wiki/App_Inventor_for_Android
            blockly

        https://www.activiti.org/
            Open Source Business Automation

        https://www.fluidui.com/
            fiddly ui designer

        https://sheety.co/
            Turn your Google Sheet into an API

        huh?
            https://nocodeapi.com/
            "Convert these applications APIs"

        meta:
            https://news.ycombinator.com/item?id=22786853
            https://stackshare.io/no-code-platforms
            https://www.integromat.com/en/blog/2019/11/18/every-tool-you-need-to-build-without-code/
            https://www.openxava.org/related/


ML
    https://www.h2o.ai/products/h2o-driverless-ai/#feature-engineering
    https://www.reddit.com/r/artificial/comments/eu6brx/when_i_was_learning_machine_learning_for_the/




TT
    https://github.com/moonad/Formality/
    https://imandra.ai/




voice-coding
    https://news.ycombinator.com/item?id=22918980
    https://news.ycombinator.com/item?id=22404264
	https://talonvoice.com/
		https://www.patreon.com/join/lunixbochs






meta, other tool dbs:
	http://teresah.dariah.eu/tools/yed-graph/data-sources/teresah
	https://www.cubicweb.org/link/1347429?vid=rdf






?
    https://news.ycombinator.com/item?id=22843085
        Decentralized Version Control for Structured Data


roomba
	https://news.ycombinator.com/item?id=22940450
		https://www.roboticky-vysavac.cz/irobot-braava-jet-240





formalized contracts/business rule stuff




	https://docs.camunda.org/manual/7.4/reference/dmn11/
	      https://news.crunchbase.com/news/berlins-camunda-raises-28m-to-grow-its-workflow-automation-platform/





2020-04-17 06:38:14 <freeside> tom hvitved's phd thesis was a huge
      inspiration:
      https://drive.google.com/open?id=0BxOaYa8pqqSwbl9GMWtwVU5HSFU
2020-04-17 06:39:03 <freeside> his language models contracts as state machines
      with trace reductions over time
2020-04-17 06:44:31 <freeside> And then the Contract Specification Language he
      develops is, i think, still one of the best formalisms i've seen for
      real-world contract states
2020-04-17 06:45:11 <freeside> when i get a few researchers hired maybe I will
      ask one of them to resolve the question of whether this sort of CSL
      thing is in the same grammatical category as BPMN, in the sense of
      equivalent expressiveness
2020-04-17 06:44:31 <freeside> And then the Contract Specification Language he
      develops is, i think, still one of the best formalisms i've seen for
      real-world contract states
2020-04-17 06:45:11 <freeside> when i get a few researchers hired maybe I will
      ask one of them to resolve the question of whether this sort of CSL
      thing is in the same grammatical category as BPMN, in the sense of
      equivalent expressiveness
2020-04-17 06:45:42 <freeside> we're hiring now, in case anybody knows anyone
      who would like to exercise their prolog skills in the direction of law
2020-04-17 06:46:34 <freeside> sometimes we pitch it as "did your parents want
      you to go to law school? But did insist that computers were more
      interesting? Did they kick you out and disown you from the family? Now
      is your chance to prove yourself right once and for all"
2020-04-17 06:46:42 <freeside> lol
2020-04-17 05:26:28 <freeside> anyway, the funding will basically go toward
      formalizing contracts (as state machines / timed petri nets) and laws
      (as rule / constraint systems), and we want to demonstrate value by
      showing automatable natural language generation of the kinds of things
      that usually come out of a legislative drafting office.
2020-04-17 05:27:50 <freeside> another thing we want to demonstrate is model
      checking / formal verification / static analysis of contracts, using
      SAT/SMT or interactive theorem proving or etc approaches


	ContractLog
		http://www.prova.ws/
			dead?
2020-04-17 05:58:42 <aindilis> http://rbsla.ruleml.org/
2020-04-17 05:59:08 <aindilis> I *think* this is what I was looking for
2020-04-17 05:59:46 *** T_K (~TK@82.131.64.41.cable.starman.ee) has joined
      channel ##prolog
2020-04-17 06:00:00 <freeside> right. i have been wondering who uses the
      RuleML family languages in the real world.
2020-04-17 06:00:10 *** conan (~conan@mdproctor.plus.com) has joined channel
      ##prolog
2020-04-17 06:01:43 <freeside> do you know of any actual uses? When I last
      touched SLA it was in the context of a tmforum.org project, and i didn't
      get the sense that any of the member telcos were using RBSLA
2020-04-17 06:02:04 <aindilis> no I don't, I just had remembered seeing this
2020-04-17 06:02:21 <freeside> right, right
2020-04-17 06:04:59 <freeside> if i recall correctly, since ContractLog,
      there's been eContracts from LegalXML's OASIS working group, and then
      CoSoDIS worked on contract formalization, and then recently Tom Hvitved
      and John Camilleri both wrote PhD theses on contract formalization and
      related tools, under the POETS 3gERP project and the REMU project
      respectively ...









pip
    pipenv - dead
    poetry - meh
    pyenv-virtualenv + pip-tools ?







trampoliny
    https://www.goodjump.cz/goodjump-trampolina-400-cm-s-ochrannou-siti-a-zebrik
->   https://trampoliny.heureka.cz/aga-sport-fit-430-cm-plus-vnitrni-ochranna-sit/#









misc rsrch
    https://www.keycdn.com/support/nginx-directory-index
        not as good as apache's

        -> https://httpd.apache.org/docs/2.4/mod/mod_proxy.html#access

        https://www.nginx.com/resources/wiki/modules/fancy_index/
            ugh

    https://docs.gunicorn.org/en/stable/deploy.html
        still relies on apache for static files, like all the others


    https://developer.logicblox.com/using-modeler-js-applications/
    https://www.cubicweb.org/link/2909347
    https://gojs.net/latest/index.html
    https://dwkit.com/


    https://medium.com/@thishantha17/build-a-simple-python-rest-api-with-apache2-gunicorn-and-flask-on-ubuntu-18-04-c9d47639139b

    https://www.anandtech.com/show/15708/amds-mobile-revival-redefining-the-notebook-business-with-the-ryzen-9-4900hs-a-review/10

    https://news.ycombinator.com/item?id=22919046
        ->  https://www.alza.cz/gaming/oculus-go-d5132197.htm?kampan=adw4_prislusenstvi-pro-mt_pla_all_prislusenstvi-css_bryle-pro-vr_c_9062903__OC002b2
            https://www.zbozi.cz/vyrobek/vision-720-3d-video-bryle/
            https://www.banggood.com/cs/IN-STOCKVISION-800-3D-Glasses-Video-Android-4_4-MTK6582-1G2G-5MP-AC-WIFI-BT4_0-2060P-MIC-p-1092423.html


    You could fix this by making payment for software as 25% upfront with 20% on deliver and then 50% on 18 months of as advertised use.




    https://www.hlidacshopu.cz/

	https://aws.amazon.com/appsync/product-details/

