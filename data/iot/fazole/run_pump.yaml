    id: run_pump${n}
    mode: parallel
    max_runs: 1
    then:
      - if:
          condition:
              lambda: |-
                  return (id(ntp).utcnow().timestamp > 1680000000) && (id(ntp).utcnow().timestamp - id(last_pump_ts${n}).state > 60*60*20);
          then:
            - wait_until:
               - switch.is_off: pump1
               - switch.is_off: pump2
               - switch.is_off: pump3
               - switch.is_off: pump4

            - number.set:
                id: last_pump_ts${n}
                value: !lambda |-
                  return id($clock).utcnow().timestamp;
            - mqtt.publish:
                topic: fazole/pump/pump${n}/state
                payload: "watering"
            - switch.turn_on: pump${n}
            - delay: 3s
            - mqtt.publish:
                topic: fazole/pump/pump${n}/state
                payload: "watering"
            - delay: 3s
            - mqtt.publish:
                topic: fazole/pump/pump${n}/state
                payload: "watering"
            - delay: 3s
            - mqtt.publish:
                topic: fazole/pump/pump${n}/state
                payload: "watering"
            - delay: 3s
            - mqtt.publish:
                topic: fazole/pump/pump${n}/state
                payload: "watering"
            - delay: 3s
            - mqtt.publish:
                topic: fazole/pump/pump${n}/state
                payload: "watering"
            - delay: 3s
            - switch.turn_off: pump${n}
            - mqtt.publish:
                topic: fazole/pump/pump${n}/state
                payload: "done"
            
            - number.set:
                id: last_pump_success_ts${n}
                value: !lambda |-
                  return id($clock).utcnow().timestamp;
