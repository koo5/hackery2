"""
The same principle applies to the steps of processing our notes. Consider that no single step in the process of turning raw ideas into finished pieces of writing is particularly difficult. It isn’t very hard to write down notes in the first place. Nor is turning a group of notes into an outline very demanding. It also isn’t much of a challenge to turn a working outline full of relevant arguments into a rough draft. And polishing a well-conceived rough draft into a final draft is trivial.

So if each individual step is so easy, why do we find the overall experience of writing so grueling? Because we try to do all the steps at once. Each of the activities that make up “writing” – reading, reflecting, having ideas, making connections, distinguishing terms, finding the right words, structuring, organizing, editing, correcting, and rewriting – require a very different kind of attention.

Proofreading requires very focused, detail-oriented attention, while choosing which words to put down in the first place might require a more open, free-floating attention. When looking for interesting connections between notes, we often need to be in a playful, curious state of mind, whereas when putting them in logical order, our state of mind probably needs to be more serious and precise.

The slip-box is the host of the process outlined above. It provides a place where distinct batches of work can be created, worked on, and saved permanently until the next time we are ready to deploy that particular kind of attention. It deliberately puts distance between ourselves and what we’ve written, which is essential for evaluating it objectively. It is far easier to switch between the role of creator and critic when there is a clear separation between them, and you don’t have to do both at the same time.
"""
- https://praxis.fortelabs.co/how-to-take-smart-notes/
	- https://praxis.fortelabs.co/how-to-take-smart-notes/
	- https://news.ycombinator.com/item?id=22341518










iot
    https://github.com/electrocoder/iotdashboard
        https://iothook.com/
        https://iothook.com/en/device/chart/301/

        finally something that accepts multiple sensor data on one http request. Unfortunately no true dashboard or customizable graphs.

    https://www.instructables.com/id/IoT-Guru-Cloud-Simple-Chart-Example/






language learning
    https://www.reddit.com/r/germany/comments/en8dg6/i_made_a_free_website_where_you_can_learn_german/




electronics
    transistors
        https://arduinodiy.wordpress.com/2012/05/02/using-mosfets-with-ttl-levels/




visualization
    https://infogram.com/
    https://www.highcharts.com/
        https://github.com/kyper-data/python-highcharts
    https://gojs.net



collaborative tools
    http://tapor.ca/tool_lists/15
    https://mural.co/templates
    http://searchteam.com
        cant log in



mindmapping
    freeplane
    https://en.wikipedia.org/wiki/Compendium_(software)
        https://github.com/CompendiumNG/CompendiumNG/wiki/Download%2C-build-and-run-CompendiumNG-from-GitHub




meta
    http://tapor.ca/
    https://www.cubicweb.org/1347429
        https://www.cubicweb.org/blog/1238
        https://www.cubicweb.org/Link
        https://cubicweb.readthedocs.io/en/latest/book/devrepo/cubes/available-cubes/
    https://hypothes.is/search
    https://www.cubicweb.org/link/2909358





todo
    https://www.honeycomb.io/microservices/
    https://stackoverflow.com/questions/18760281/how-to-increase-scrollback-buffer-size-in-tmux
    https://graphik-team.github.io/graal/
        The existential rule framework
    https://basecamp.com/shapeup/3.4-chapter-12#status-without-asking


    http://irnok.net:3030/help/source/doc/home/prolog/ontology-server/ClioPatria/lib/semweb/rdf_json.pl
    https://github.com/logicmoo/ClioPatria-filessytem-and-clausedb/blob/master/README.md
    https://www.swi-prolog.org/pldoc/man?section=termtojson
    https://pengines.swi-prolog.org/apps/scratchpad/index.html#

    http://www.pathwayslms.com/swipltuts/clpfd/clpfd.html
    http://www.pathwayslms.com/swipltuts/message/index.html

    CHR
        http://www.pathwayslms.com/swipltuts/chr/basics.html
        http://www.pathwayslms.com/swipltuts/chr/examples.html
        https://dtai.cs.kuleuven.be/CHR/files/tutorial_iclp2008.pdf
            Alternate Ending?
            Unspecified which partner is found?
            coin ==> heads. coin ==> tails.
                ^ im getting different order


        https://www.swi-prolog.org/pldoc/man?section=debugging
        https://developer.logicblox.com/using-modeler-js-applications/
        https://boxbase.org/entries/2018/aug/13/constraint_handling_rules/


    https://www.swi-prolog.org/pldoc/doc/_SWI_/library/rewrite.pl?format_comments=false&show=src
    https://www.swi-prolog.org/pldoc/man?section=solutionsequences

    https://www.doc.ic.ac.uk/~mpsha/ECExplained.pdf
        event calculus

    https://swish.swi-prolog.org/pldoc/doc/_CWD_/lib/render/graphviz.pl
    https://swish.swi-prolog.org/example/render_graphviz.swinb




webdev
    https://github.com/mavoweb/mavo
        low-code js UI, js library of html tags, no rdf
        backends:
            https://plugins.mavo.io/
        https://plugins.mavo.io/plugin/chart

    https://github.com/tiangolo/fastapi
	https://github.com/sveltejs/svelte
        https://github.com/mdauner/sveltejs-forms
	    https://github.com/noahlh/celestite
		https://news.ycombinator.com/item?id=22534639
    https://developer.logicblox.com/using-modeler-js-applications/
    https://www.cubicweb.org/blogentry/17069884
        Hypermedia API with cubicweb-jsonschema


    http://nytimes.github.io/pourover/
        library for filtering and sorting of large collections in the browser
    https://www.cubicweb.org/link/2909347
        stream based protocol for exposing and consuming data in a standardised way. It uses Atom and RDF
    https://gojs.net
        Interactive JavaScript Diagrams for the Web
    https://dwkit.com/documentation/video-tutorials
    https://www.html5rocks.com/en/tutorials/cors/


low-code platforms

	https://svelte.dev/
		not traditional low-code, but a framework that seems to be like a next level from vue

	https://www.openxava.org/
        "write the code for your data structure and business logic. You do not write HTML, JavaScript, CSS, SQL, etc. The user interface and the database logic are automatically provided."
        Java

    https://www.netlify.com
        https://docs.netlify.com/visitor-access/identity/#enable-identity-in-the-ui
        low code but full js/html

	https://structr.com/
		curious neo4j-based visual browser app building framework, with a dataflow language

    knack.com
        recommended, for simple mockups
        $39/month

    https://bubble.io/
        recommended, for simple mockups

    https://mobileroadie.com/
        pre-templated company/business/media/event app creator

	https://en.wikipedia.org/wiki/App_Inventor_for_Android
        blockly

    https://www.activiti.org/
        Open Source Business Automation

    https://www.fluidui.com/
        fiddly ui designer

    https://sheety.co/
        Turn your Google Sheet into an API

    huh?
        https://nocodeapi.com/
        "Convert these applications APIs"

    meta:
        https://news.ycombinator.com/item?id=22786853
        https://stackshare.io/no-code-platforms
        https://www.integromat.com/en/blog/2019/11/18/every-tool-you-need-to-build-without-code/
		https://www.openxava.org/related/


ML
    https://www.h2o.ai/products/h2o-driverless-ai/#feature-engineering
    https://www.reddit.com/r/artificial/comments/eu6brx/when_i_was_learning_machine_learning_for_the/




TT
    https://github.com/moonad/Formality/
    https://imandra.ai/




voice-coding
    https://news.ycombinator.com/item?id=22404264
	https://talonvoice.com/
		https://www.patreon.com/join/lunixbochs






meta, other tool dbs:
	http://teresah.dariah.eu/tools/yed-graph/data-sources/teresah
	https://www.cubicweb.org/link/1347429?vid=rdf






?
    https://news.ycombinator.com/item?id=22843085
        Decentralized Version Control for Structured Data

